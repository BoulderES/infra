# Default configurations
# Ref: https://github.com/infrahq/infra

nameOverride: ""
fullnameOverride: ""

# Default server configurations
server:


  ## Infra server ingress configurations
  ingress:

    ## Enable server ingress resource
    enabled: true

    ## Ingress labels
    labels: {}

    ## Ingress annotations
    annotations: {}

    ## Name of the ingress controller that will implement this resource
    className: ""

    ## Hostnames to apply this ingress to
    ## Must not be empty if `ingress.enabled` is `true`
    hosts:
     - infra.rancher-poc.unicc.org

    ## Paths to apply this ingress to
    paths:
      - /

    ## Type of path
    ## One of `Exact`, `Prefix`, or `ImplementationSpecific`
    pathType: Prefix

    ## Additional paths to attach to the ingress
    additionalPaths: []
    # Kubernetes <1.19, using `networking.k8s.io/v1beta1`
    # - path: /*
    #   backend:
    #     serviceName: ssl-redirect
    #     servicePort: use-annotation
    # Kubernetes >=1.19, using `networking.k8s.io/v1`
    # - path: /*
    #   pathType: Prefix
    #   backend:
    #     service:
    #       name: ssl-redirect
    #       port:
    #         name: use-annotation

    ## Ingress TLS configurations
    tls: []
    # - secretName: infra-tls-certificate
    #   hosts:
    #     - infra.example.com

  ## Primary server configuration
  config:
    ## Additional grants to configure
    grants:
      # 1. Grant user(s) or group(s) as Infra administrator
      # Setup an user as Infra administrator
      - user: admin
        role: admin
        resource: infra

      # 2. Grant user(s) or group(s) access to a resources
      # Example of granting access to an individual user the `cluster-admin` role. The name of a resource is specified when installing the Infra Engine at that location.
      - user: admin
        role: cluster-admin                  # cluster_roles required
        resource: example-cluster            # limit access to the `example-cluster` Kubernetes cluster

      # Example of granting access to an individual user through assigning them to the 'edit' role in the `web` namespace.
      # In this case, Infra will automatically scope the access to a namespace.
      - user: admin
        role: edit                            # cluster_roles required
        resource: example-cluster.web         # limit access to only the `web` namespace in the `example-cluster` Kubernetes cluster

      # Example of granting access to a group the `view` role.
      - group: Everyone
        role: view                           # cluster_roles required
        resource: example-cluster            # limit access to the `example-cluster` Kubernetes cluster

    ## Additional users to configure
    users:
      - name: admin
        password: password
